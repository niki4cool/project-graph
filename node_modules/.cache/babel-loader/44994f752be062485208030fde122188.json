{"ast":null,"code":"module.exports = AFRAME.registerComponent('checkpoint', {\n  schema: {\n    offset: {\n      default: {\n        x: 0,\n        y: 0,\n        z: 0\n      },\n      type: 'vec3'\n    }\n  },\n  init: function init() {\n    this.active = false;\n    this.targetEl = null;\n    this.fire = this.fire.bind(this);\n    this.offset = new THREE.Vector3();\n  },\n  update: function update() {\n    this.offset.copy(this.data.offset);\n  },\n  play: function play() {\n    this.el.addEventListener('click', this.fire);\n  },\n  pause: function pause() {\n    this.el.removeEventListener('click', this.fire);\n  },\n  remove: function remove() {\n    this.pause();\n  },\n  fire: function fire() {\n    var targetEl = this.el.sceneEl.querySelector('[checkpoint-controls]');\n\n    if (!targetEl) {\n      throw new Error('No `checkpoint-controls` component found.');\n    }\n\n    targetEl.components['checkpoint-controls'].setCheckpoint(this.el);\n  },\n  getOffset: function getOffset() {\n    return this.offset.copy(this.data.offset);\n  }\n});","map":{"version":3,"names":["module","exports","AFRAME","registerComponent","schema","offset","default","x","y","z","type","init","active","targetEl","fire","bind","THREE","Vector3","update","copy","data","play","el","addEventListener","pause","removeEventListener","remove","sceneEl","querySelector","Error","components","setCheckpoint","getOffset"],"sources":["X:/Project/back/node_modules/aframe-extras/src/misc/checkpoint.js"],"sourcesContent":["module.exports = AFRAME.registerComponent('checkpoint', {\n  schema: {\n    offset: {default: {x: 0, y: 0, z: 0}, type: 'vec3'}\n  },\n\n  init: function () {\n    this.active = false;\n    this.targetEl = null;\n    this.fire = this.fire.bind(this);\n    this.offset = new THREE.Vector3();\n  },\n\n  update: function () {\n    this.offset.copy(this.data.offset);\n  },\n\n  play: function () { this.el.addEventListener('click', this.fire); },\n  pause: function () { this.el.removeEventListener('click', this.fire); },\n  remove: function () { this.pause(); },\n\n  fire: function () {\n    const targetEl = this.el.sceneEl.querySelector('[checkpoint-controls]');\n    if (!targetEl) {\n      throw new Error('No `checkpoint-controls` component found.');\n    }\n    targetEl.components['checkpoint-controls'].setCheckpoint(this.el);\n  },\n\n  getOffset: function () {\n    return this.offset.copy(this.data.offset);\n  }\n});\n"],"mappings":"AAAAA,MAAM,CAACC,OAAP,GAAiBC,MAAM,CAACC,iBAAP,CAAyB,YAAzB,EAAuC;EACtDC,MAAM,EAAE;IACNC,MAAM,EAAE;MAACC,OAAO,EAAE;QAACC,CAAC,EAAE,CAAJ;QAAOC,CAAC,EAAE,CAAV;QAAaC,CAAC,EAAE;MAAhB,CAAV;MAA8BC,IAAI,EAAE;IAApC;EADF,CAD8C;EAKtDC,IAAI,EAAE,gBAAY;IAChB,KAAKC,MAAL,GAAc,KAAd;IACA,KAAKC,QAAL,GAAgB,IAAhB;IACA,KAAKC,IAAL,GAAY,KAAKA,IAAL,CAAUC,IAAV,CAAe,IAAf,CAAZ;IACA,KAAKV,MAAL,GAAc,IAAIW,KAAK,CAACC,OAAV,EAAd;EACD,CAVqD;EAYtDC,MAAM,EAAE,kBAAY;IAClB,KAAKb,MAAL,CAAYc,IAAZ,CAAiB,KAAKC,IAAL,CAAUf,MAA3B;EACD,CAdqD;EAgBtDgB,IAAI,EAAE,gBAAY;IAAE,KAAKC,EAAL,CAAQC,gBAAR,CAAyB,OAAzB,EAAkC,KAAKT,IAAvC;EAA+C,CAhBb;EAiBtDU,KAAK,EAAE,iBAAY;IAAE,KAAKF,EAAL,CAAQG,mBAAR,CAA4B,OAA5B,EAAqC,KAAKX,IAA1C;EAAkD,CAjBjB;EAkBtDY,MAAM,EAAE,kBAAY;IAAE,KAAKF,KAAL;EAAe,CAlBiB;EAoBtDV,IAAI,EAAE,gBAAY;IAChB,IAAMD,QAAQ,GAAG,KAAKS,EAAL,CAAQK,OAAR,CAAgBC,aAAhB,CAA8B,uBAA9B,CAAjB;;IACA,IAAI,CAACf,QAAL,EAAe;MACb,MAAM,IAAIgB,KAAJ,CAAU,2CAAV,CAAN;IACD;;IACDhB,QAAQ,CAACiB,UAAT,CAAoB,qBAApB,EAA2CC,aAA3C,CAAyD,KAAKT,EAA9D;EACD,CA1BqD;EA4BtDU,SAAS,EAAE,qBAAY;IACrB,OAAO,KAAK3B,MAAL,CAAYc,IAAZ,CAAiB,KAAKC,IAAL,CAAUf,MAA3B,CAAP;EACD;AA9BqD,CAAvC,CAAjB"},"metadata":{},"sourceType":"script"}