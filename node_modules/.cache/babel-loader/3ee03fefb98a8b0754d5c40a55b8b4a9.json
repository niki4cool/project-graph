{"ast":null,"code":"/* global AFRAME */\nif (typeof AFRAME === 'undefined') {\n  throw new Error('Component attempted to register before AFRAME was available.');\n}\n\nvar accessorFn = require('accessor-fn');\n\nif ('default' in accessorFn) {\n  // unwrap default export\n  accessorFn = accessorFn.default;\n}\n\nvar ThreeForceGraph = require('three-forcegraph');\n\nif ('default' in ThreeForceGraph) {\n  // unwrap default export\n  ThreeForceGraph = ThreeForceGraph.default;\n}\n\nvar parseJson = function parseJson(prop) {\n  return typeof prop === 'string' ? JSON.parse(prop) : prop; // already parsed\n};\n\nvar parseFn = function parseFn(prop) {\n  if (typeof prop === 'function') return prop; // already a function\n\n  var geval = eval; // Avoid using eval directly https://github.com/rollup/rollup/wiki/Troubleshooting#avoiding-eval\n\n  try {\n    var evalled = geval('(' + prop + ')');\n    return evalled;\n  } catch (e) {} // Can't eval, not a function\n\n\n  return null;\n};\n\nvar parseAccessor = function parseAccessor(prop) {\n  if (!isNaN(parseFloat(prop))) {\n    return parseFloat(prop);\n  } // parse numbers\n\n\n  if (parseFn(prop)) {\n    return parseFn(prop);\n  } // parse functions\n\n\n  return prop; // strings\n};\n/**\n * 3D Force-Directed Graph component for A-Frame.\n */\n\n\nAFRAME.registerComponent('forcegraph', {\n  schema: {\n    jsonUrl: {\n      type: 'string',\n      default: ''\n    },\n    nodes: {\n      parse: parseJson,\n      default: []\n    },\n    links: {\n      parse: parseJson,\n      default: []\n    },\n    numDimensions: {\n      type: 'number',\n      default: 3\n    },\n    dagMode: {\n      type: 'string',\n      default: ''\n    },\n    dagLevelDistance: {\n      type: 'number',\n      default: 0\n    },\n    dagNodeFilter: {\n      parse: parseFn,\n      default: function _default() {\n        return true;\n      }\n    },\n    onDagError: {\n      parse: parseFn,\n      default: undefined\n    },\n    nodeRelSize: {\n      type: 'number',\n      default: 4\n    },\n    // volume per val unit\n    nodeId: {\n      type: 'string',\n      default: 'id'\n    },\n    nodeVal: {\n      parse: parseAccessor,\n      default: 'val'\n    },\n    nodeResolution: {\n      type: 'number',\n      default: 8\n    },\n    // how many slice segments in the sphere's circumference\n    nodeVisibility: {\n      parse: parseAccessor,\n      default: true\n    },\n    nodeColor: {\n      parse: parseAccessor,\n      default: 'color'\n    },\n    nodeAutoColorBy: {\n      parse: parseAccessor,\n      default: ''\n    },\n    // color nodes with the same field equally\n    nodeOpacity: {\n      type: 'number',\n      default: 0.75\n    },\n    nodeThreeObject: {\n      parse: parseAccessor,\n      default: null\n    },\n    nodeThreeObjectExtend: {\n      parse: parseAccessor,\n      default: false\n    },\n    linkSource: {\n      type: 'string',\n      default: 'source'\n    },\n    linkTarget: {\n      type: 'string',\n      default: 'target'\n    },\n    linkVisibility: {\n      parse: parseAccessor,\n      default: true\n    },\n    linkColor: {\n      parse: parseAccessor,\n      default: 'color'\n    },\n    linkAutoColorBy: {\n      parse: parseAccessor,\n      default: ''\n    },\n    // color links with the same field equally\n    linkOpacity: {\n      type: 'number',\n      default: 0.2\n    },\n    linkWidth: {\n      parse: parseAccessor,\n      default: 0\n    },\n    linkResolution: {\n      type: 'number',\n      default: 6\n    },\n    // how many radial segments in each line cylinder's geometry\n    linkCurvature: {\n      parse: parseAccessor,\n      default: 0\n    },\n    linkCurveRotation: {\n      parse: parseAccessor,\n      default: 0\n    },\n    linkMaterial: {\n      parse: parseAccessor,\n      default: null\n    },\n    linkThreeObject: {\n      parse: parseAccessor,\n      default: null\n    },\n    linkThreeObjectExtend: {\n      parse: parseAccessor,\n      default: false\n    },\n    linkPositionUpdate: {\n      parse: parseFn,\n      default: null\n    },\n    linkDirectionalArrowLength: {\n      parse: parseAccessor,\n      default: 0\n    },\n    linkDirectionalArrowColor: {\n      parse: parseAccessor,\n      default: null\n    },\n    linkDirectionalArrowRelPos: {\n      parse: parseAccessor,\n      default: 0.5\n    },\n    // value between 0<>1 indicating the relative pos along the (exposed) line\n    linkDirectionalArrowResolution: {\n      type: 'number',\n      default: 8\n    },\n    // how many slice segments in the arrow's conic circumference\n    linkDirectionalParticles: {\n      parse: parseAccessor,\n      default: 0\n    },\n    // animate photons travelling in the link direction\n    linkDirectionalParticleSpeed: {\n      parse: parseAccessor,\n      default: 0.01\n    },\n    // in link length ratio per frame\n    linkDirectionalParticleWidth: {\n      parse: parseAccessor,\n      default: 0.5\n    },\n    linkDirectionalParticleColor: {\n      parse: parseAccessor,\n      default: null\n    },\n    linkDirectionalParticleResolution: {\n      type: 'number',\n      default: 4\n    },\n    // how many slice segments in the particle sphere's circumference\n    onNodeHover: {\n      parse: parseFn,\n      default: function _default() {}\n    },\n    onLinkHover: {\n      parse: parseFn,\n      default: function _default() {}\n    },\n    onNodeClick: {\n      parse: parseFn,\n      default: function _default() {}\n    },\n    onLinkClick: {\n      parse: parseFn,\n      default: function _default() {}\n    },\n    forceEngine: {\n      type: 'string',\n      default: 'd3'\n    },\n    // 'd3' or 'ngraph'\n    d3AlphaMin: {\n      type: 'number',\n      default: 0\n    },\n    d3AlphaDecay: {\n      type: 'number',\n      default: 0.0228\n    },\n    d3VelocityDecay: {\n      type: 'number',\n      default: 0.4\n    },\n    ngraphPhysics: {\n      parse: parseJson,\n      default: null\n    },\n    warmupTicks: {\n      type: 'int',\n      default: 0\n    },\n    // how many times to tick the force engine at init before starting to render\n    cooldownTicks: {\n      type: 'int',\n      default: 1e18\n    },\n    // Simulate infinity (int parser doesn't accept Infinity object)\n    cooldownTime: {\n      type: 'int',\n      default: 15000\n    },\n    // ms\n    onEngineTick: {\n      parse: parseFn,\n      default: function _default() {}\n    },\n    onEngineStop: {\n      parse: parseFn,\n      default: function _default() {}\n    }\n  },\n  // Bind component methods\n  getGraphBbox: function getGraphBbox() {\n    if (!this.forceGraph) {\n      // Got here before component init -> initialize forceGraph\n      this.forceGraph = new ThreeForceGraph();\n    }\n\n    return this.forceGraph.getGraphBbox();\n  },\n  emitParticle: function emitParticle() {\n    if (!this.forceGraph) {\n      // Got here before component init -> initialize forceGraph\n      this.forceGraph = new ThreeForceGraph();\n    }\n\n    var forceGraph = this.forceGraph;\n    var returnVal = forceGraph.emitParticle.apply(forceGraph, arguments);\n    return returnVal === forceGraph ? this // return self, not the inner forcegraph component\n    : returnVal;\n  },\n  d3Force: function d3Force() {\n    if (!this.forceGraph) {\n      // Got here before component init -> initialize forceGraph\n      this.forceGraph = new ThreeForceGraph();\n    }\n\n    var forceGraph = this.forceGraph;\n    var returnVal = forceGraph.d3Force.apply(forceGraph, arguments);\n    return returnVal === forceGraph ? this // return self, not the inner forcegraph component\n    : returnVal;\n  },\n  d3ReheatSimulation: function d3ReheatSimulation() {\n    this.forceGraph && this.forceGraph.d3ReheatSimulation();\n    return this;\n  },\n  refresh: function refresh() {\n    this.forceGraph && this.forceGraph.refresh();\n    return this;\n  },\n  init: function init() {\n    var _this = this;\n\n    var state = this.state = {}; // Internal state\n    // Add info msg\n\n    state.infoEl = document.createElement('a-text');\n    state.infoEl.setAttribute('position', '0 -0.1 -1'); // Canvas center\n\n    state.infoEl.setAttribute('width', 1);\n    state.infoEl.setAttribute('align', 'center');\n    state.infoEl.setAttribute('color', 'lavender'); // Get camera dom element and attach fixed view elements to camera\n\n    var cameraEl = document.querySelector('a-entity[camera], a-camera');\n    cameraEl.appendChild(state.infoEl); // Keep reference to Three camera object\n\n    state.cameraObj = cameraEl.object3D.children.filter(function (child) {\n      return child.type === 'PerspectiveCamera';\n    })[0]; // On camera switch\n\n    this.el.sceneEl.addEventListener('camera-set-active', function (evt) {\n      // Switch camera reference\n      state.cameraObj = evt.detail.cameraEl.components.camera.camera;\n    }); // setup FG object\n\n    if (!this.forceGraph) this.forceGraph = new ThreeForceGraph(); // initialize forceGraph if it doesn't exist yet\n\n    this.forceGraph.onFinishUpdate(function () {\n      return _this.el.setObject3D('forcegraphGroup', _this.forceGraph);\n    }) // Bind forcegraph to elem\n    .onLoading(function () {\n      return state.infoEl.setAttribute('value', 'Loading...');\n    }) // Add loading msg\n    .onFinishLoading(function () {\n      return state.infoEl.setAttribute('value', '');\n    }); // prefer raycaster events over mouseenter/mouseleave because they expose immediately available intersection data via detail.getIntersection()\n\n    this.el.addEventListener('raycaster-intersected', function (ev) {\n      return state.hoverDetail = ev.detail;\n    });\n    this.el.addEventListener('raycaster-intersected-cleared', function (ev) {\n      return state.hoverDetail = ev.detail;\n    });\n    this.el.addEventListener('click', function () {\n      return state.hoverObj && _this.data['on' + (state.hoverObj.__graphObjType === 'node' ? 'Node' : 'Link') + 'Click'](state.hoverObj.__data);\n    });\n  },\n  remove: function remove() {\n    // Clean-up elems\n    this.state.infoEl.remove();\n    this.el.removeObject3D('forcegraphGroup');\n  },\n  update: function update(oldData) {\n    var comp = this;\n    var elData = this.data;\n    var diff = AFRAME.utils.diff(elData, oldData);\n    var fgProps = ['jsonUrl', 'numDimensions', 'dagMode', 'dagLevelDistance', 'dagNodeFilter', 'onDagError', 'nodeRelSize', 'nodeId', 'nodeVal', 'nodeResolution', 'nodeVisibility', 'nodeColor', 'nodeAutoColorBy', 'nodeOpacity', 'nodeThreeObject', 'nodeThreeObjectExtend', 'linkSource', 'linkTarget', 'linkVisibility', 'linkColor', 'linkAutoColorBy', 'linkOpacity', 'linkWidth', 'linkResolution', 'linkCurvature', 'linkCurveRotation', 'linkMaterial', 'linkThreeObject', 'linkThreeObjectExtend', 'linkPositionUpdate', 'linkDirectionalArrowLength', 'linkDirectionalArrowColor', 'linkDirectionalArrowRelPos', 'linkDirectionalArrowResolution', 'linkDirectionalParticles', 'linkDirectionalParticleSpeed', 'linkDirectionalParticleWidth', 'linkDirectionalParticleColor', 'linkDirectionalParticleResolution', 'forceEngine', 'd3AlphaMin', 'd3AphaDecay', 'd3VelocityDecay', 'ngraphPhysics', 'warmupTicks', 'cooldownTicks', 'cooldownTime', 'onEngineTick', 'onEngineStop'];\n    fgProps.filter(function (p) {\n      return p in diff;\n    }).forEach(function (p) {\n      comp.forceGraph[p](elData[p] !== '' ? elData[p] : null);\n    }); // Convert blank values into nulls\n\n    if ('nodes' in diff || 'links' in diff) {\n      comp.forceGraph.graphData({\n        nodes: elData.nodes,\n        links: elData.links\n      });\n    }\n  },\n  tick: function tick(t, td) {\n    var state = this.state;\n    var props = this.data; // Update hover (intersected) object\n\n    var intersection = state.hoverDetail ? state.hoverDetail.getIntersection ? state.hoverDetail.getIntersection(this.el) // available in raycaster-intersected events\n    : state.hoverDetail.intersection || undefined // available in mouseenter/mouseleave events (with delayed update)\n    : undefined; // Note:\n    // Unfortunately we only have access to the intersected object closer to the camera (1st element in the raycaster intersectObjects result),\n    // there is no \".getIntersections()\" method available in the event details. Therefore, we can't prioritize hover on nodes over links, or even exclude\n    // objects that are neither nodes or links. This makes the interaction a bit erratic if nodes have a lot of links in front.\n    // Configuring the raycaster.params.Line.threshold might help with this somewhat, but that config is also not available via the a-frame raycaster component.\n    // recurse up until forcegraph obj is found\n\n    var topObject = intersection ? intersection.object : undefined;\n\n    while (topObject && !topObject.hasOwnProperty('__graphObjType')) {\n      topObject = topObject.parent;\n    }\n\n    if (topObject !== state.hoverObj) {\n      var prevObjType = state.hoverObj ? state.hoverObj.__graphObjType : null;\n      var prevObjData = state.hoverObj ? state.hoverObj.__data : null;\n      var objType = topObject ? topObject.__graphObjType : null;\n      var objData = topObject ? topObject.__data : null;\n\n      if (prevObjType && prevObjType !== objType) {\n        // Hover out\n        props['on' + (prevObjType === 'node' ? 'Node' : 'Link') + 'Hover'](null, prevObjData);\n      }\n\n      if (objType) {\n        // Hover in\n        props['on' + (objType === 'node' ? 'Node' : 'Link') + 'Hover'](objData, prevObjType === objType ? prevObjData : null);\n      }\n\n      state.hoverObj = topObject;\n    } // Run force-graph ticker\n\n\n    this.forceGraph.tickFrame();\n  }\n});","map":{"version":3,"names":["AFRAME","Error","accessorFn","require","default","ThreeForceGraph","parseJson","prop","JSON","parse","parseFn","geval","eval","evalled","e","parseAccessor","isNaN","parseFloat","registerComponent","schema","jsonUrl","type","nodes","links","numDimensions","dagMode","dagLevelDistance","dagNodeFilter","onDagError","undefined","nodeRelSize","nodeId","nodeVal","nodeResolution","nodeVisibility","nodeColor","nodeAutoColorBy","nodeOpacity","nodeThreeObject","nodeThreeObjectExtend","linkSource","linkTarget","linkVisibility","linkColor","linkAutoColorBy","linkOpacity","linkWidth","linkResolution","linkCurvature","linkCurveRotation","linkMaterial","linkThreeObject","linkThreeObjectExtend","linkPositionUpdate","linkDirectionalArrowLength","linkDirectionalArrowColor","linkDirectionalArrowRelPos","linkDirectionalArrowResolution","linkDirectionalParticles","linkDirectionalParticleSpeed","linkDirectionalParticleWidth","linkDirectionalParticleColor","linkDirectionalParticleResolution","onNodeHover","onLinkHover","onNodeClick","onLinkClick","forceEngine","d3AlphaMin","d3AlphaDecay","d3VelocityDecay","ngraphPhysics","warmupTicks","cooldownTicks","cooldownTime","onEngineTick","onEngineStop","getGraphBbox","forceGraph","emitParticle","returnVal","apply","arguments","d3Force","d3ReheatSimulation","refresh","init","state","infoEl","document","createElement","setAttribute","cameraEl","querySelector","appendChild","cameraObj","object3D","children","filter","child","el","sceneEl","addEventListener","evt","detail","components","camera","onFinishUpdate","setObject3D","onLoading","onFinishLoading","ev","hoverDetail","hoverObj","data","__graphObjType","__data","remove","removeObject3D","update","oldData","comp","elData","diff","utils","fgProps","p","forEach","graphData","tick","t","td","props","intersection","getIntersection","topObject","object","hasOwnProperty","parent","prevObjType","prevObjData","objType","objData","tickFrame"],"sources":["X:/Project/back/node_modules/aframe-forcegraph-component/index.js"],"sourcesContent":["/* global AFRAME */\n\nif (typeof AFRAME === 'undefined') {\n  throw new Error('Component attempted to register before AFRAME was available.');\n}\n\nlet accessorFn = require('accessor-fn');\nif ('default' in accessorFn) {\n  // unwrap default export\n  accessorFn = accessorFn.default;\n}\n\nlet ThreeForceGraph = require('three-forcegraph');\nif ('default' in ThreeForceGraph) {\n  // unwrap default export\n  ThreeForceGraph = ThreeForceGraph.default;\n}\n\nconst parseJson = function (prop) {\n  return (typeof prop === 'string')\n    ? JSON.parse(prop)\n    : prop; // already parsed\n};\n\nconst parseFn = function (prop) {\n  if (typeof prop === 'function') return prop; // already a function\n  const geval = eval; // Avoid using eval directly https://github.com/rollup/rollup/wiki/Troubleshooting#avoiding-eval\n  try {\n    const evalled = geval('(' + prop + ')');\n    return evalled;\n  } catch (e) {} // Can't eval, not a function\n  return null;\n};\n\nconst parseAccessor = function (prop) {\n  if (!isNaN(parseFloat(prop))) { return parseFloat(prop); } // parse numbers\n  if (parseFn(prop)) { return parseFn(prop); } // parse functions\n  return prop; // strings\n};\n\n/**\n * 3D Force-Directed Graph component for A-Frame.\n */\nAFRAME.registerComponent('forcegraph', {\n  schema: {\n    jsonUrl: { type: 'string', default: '' },\n    nodes: { parse: parseJson, default: [] },\n    links: { parse: parseJson, default: [] },\n    numDimensions: { type: 'number', default: 3 },\n    dagMode: { type: 'string', default: '' },\n    dagLevelDistance: { type: 'number', default: 0 },\n    dagNodeFilter: { parse: parseFn, default: function() { return true; }},\n    onDagError: { parse: parseFn, default: undefined },\n    nodeRelSize: { type: 'number', default: 4 }, // volume per val unit\n    nodeId: { type: 'string', default: 'id' },\n    nodeVal: { parse: parseAccessor, default: 'val' },\n    nodeResolution: { type: 'number', default: 8 }, // how many slice segments in the sphere's circumference\n    nodeVisibility: { parse: parseAccessor, default: true },\n    nodeColor: { parse: parseAccessor, default: 'color' },\n    nodeAutoColorBy: { parse: parseAccessor, default: '' }, // color nodes with the same field equally\n    nodeOpacity: { type: 'number', default: 0.75 },\n    nodeThreeObject: { parse: parseAccessor, default: null },\n    nodeThreeObjectExtend: { parse: parseAccessor, default: false },\n    linkSource: { type: 'string', default: 'source' },\n    linkTarget: { type: 'string', default: 'target' },\n    linkVisibility: { parse: parseAccessor, default: true },\n    linkColor: { parse: parseAccessor, default: 'color' },\n    linkAutoColorBy: { parse: parseAccessor, default: '' }, // color links with the same field equally\n    linkOpacity: { type: 'number', default: 0.2 },\n    linkWidth: { parse: parseAccessor, default: 0 },\n    linkResolution: { type: 'number', default: 6 }, // how many radial segments in each line cylinder's geometry\n    linkCurvature: { parse: parseAccessor, default: 0 },\n    linkCurveRotation: { parse: parseAccessor, default: 0 },\n    linkMaterial: { parse: parseAccessor, default: null },\n    linkThreeObject: { parse: parseAccessor, default: null },\n    linkThreeObjectExtend: { parse: parseAccessor, default: false },\n    linkPositionUpdate: { parse: parseFn, default: null },\n    linkDirectionalArrowLength: { parse: parseAccessor, default: 0 },\n    linkDirectionalArrowColor: { parse: parseAccessor, default: null },\n    linkDirectionalArrowRelPos: { parse: parseAccessor, default: 0.5 }, // value between 0<>1 indicating the relative pos along the (exposed) line\n    linkDirectionalArrowResolution: { type: 'number', default: 8 }, // how many slice segments in the arrow's conic circumference\n    linkDirectionalParticles: { parse: parseAccessor, default: 0 }, // animate photons travelling in the link direction\n    linkDirectionalParticleSpeed: { parse: parseAccessor, default: 0.01 }, // in link length ratio per frame\n    linkDirectionalParticleWidth: { parse: parseAccessor, default: 0.5 },\n    linkDirectionalParticleColor: { parse: parseAccessor, default: null },\n    linkDirectionalParticleResolution: { type: 'number', default: 4 }, // how many slice segments in the particle sphere's circumference\n    onNodeHover: { parse: parseFn, default: () => {} },\n    onLinkHover: { parse: parseFn, default: () => {} },\n    onNodeClick: { parse: parseFn, default: () => {} },\n    onLinkClick: { parse: parseFn, default: () => {} },\n    forceEngine: { type: 'string', default: 'd3' }, // 'd3' or 'ngraph'\n    d3AlphaMin: { type: 'number', default: 0 },\n    d3AlphaDecay: { type: 'number', default: 0.0228 },\n    d3VelocityDecay: { type: 'number', default: 0.4 },\n    ngraphPhysics: { parse: parseJson, default: null },\n    warmupTicks: { type: 'int', default: 0 }, // how many times to tick the force engine at init before starting to render\n    cooldownTicks: { type: 'int', default: 1e18 }, // Simulate infinity (int parser doesn't accept Infinity object)\n    cooldownTime: { type: 'int', default: 15000 }, // ms\n    onEngineTick: { parse: parseFn, default: function () {} },\n    onEngineStop: { parse: parseFn, default: function () {} }\n  },\n\n  // Bind component methods\n  getGraphBbox: function() {\n    if (!this.forceGraph) {\n      // Got here before component init -> initialize forceGraph\n      this.forceGraph = new ThreeForceGraph();\n    }\n\n    return this.forceGraph.getGraphBbox();\n  },\n  emitParticle: function () {\n    if (!this.forceGraph) {\n      // Got here before component init -> initialize forceGraph\n      this.forceGraph = new ThreeForceGraph();\n    }\n\n    const forceGraph = this.forceGraph;\n    const returnVal = forceGraph.emitParticle.apply(forceGraph, arguments);\n\n    return returnVal === forceGraph\n      ? this // return self, not the inner forcegraph component\n      : returnVal;\n  },\n\n  d3Force: function () {\n    if (!this.forceGraph) {\n      // Got here before component init -> initialize forceGraph\n      this.forceGraph = new ThreeForceGraph();\n    }\n\n    const forceGraph = this.forceGraph;\n    const returnVal = forceGraph.d3Force.apply(forceGraph, arguments);\n\n    return returnVal === forceGraph\n      ? this // return self, not the inner forcegraph component\n      : returnVal;\n  },\n\n  d3ReheatSimulation: function () {\n    this.forceGraph && this.forceGraph.d3ReheatSimulation();\n    return this;\n  },\n\n  refresh: function () {\n    this.forceGraph && this.forceGraph.refresh();\n    return this;\n  },\n\n  init: function () {\n    const state = this.state = {}; // Internal state\n\n    // Add info msg\n    state.infoEl = document.createElement('a-text');\n    state.infoEl.setAttribute('position', '0 -0.1 -1'); // Canvas center\n    state.infoEl.setAttribute('width', 1);\n    state.infoEl.setAttribute('align', 'center');\n    state.infoEl.setAttribute('color', 'lavender');\n\n    // Get camera dom element and attach fixed view elements to camera\n    const cameraEl = document.querySelector('a-entity[camera], a-camera');\n    cameraEl.appendChild(state.infoEl);\n\n    // Keep reference to Three camera object\n    state.cameraObj = cameraEl.object3D.children\n      .filter(function (child) { return child.type === 'PerspectiveCamera'; })[0];\n\n    // On camera switch\n    this.el.sceneEl.addEventListener('camera-set-active', function (evt) {\n      // Switch camera reference\n      state.cameraObj = evt.detail.cameraEl.components.camera.camera;\n    });\n\n    // setup FG object\n    if (!this.forceGraph) this.forceGraph = new ThreeForceGraph(); // initialize forceGraph if it doesn't exist yet\n    this.forceGraph\n      .onFinishUpdate(() => this.el.setObject3D('forcegraphGroup', this.forceGraph)) // Bind forcegraph to elem\n      .onLoading(() => state.infoEl.setAttribute('value', 'Loading...')) // Add loading msg\n      .onFinishLoading(() => state.infoEl.setAttribute('value', ''));\n\n    // prefer raycaster events over mouseenter/mouseleave because they expose immediately available intersection data via detail.getIntersection()\n    this.el.addEventListener('raycaster-intersected', ev => state.hoverDetail = ev.detail);\n    this.el.addEventListener('raycaster-intersected-cleared', ev => state.hoverDetail = ev.detail);\n\n    this.el.addEventListener('click', () =>\n      state.hoverObj && this.data['on' + (state.hoverObj.__graphObjType === 'node' ? 'Node' : 'Link') + 'Click'](state.hoverObj.__data)\n    );\n  },\n\n  remove: function () {\n    // Clean-up elems\n    this.state.infoEl.remove();\n    this.el.removeObject3D('forcegraphGroup');\n  },\n\n  update: function (oldData) {\n    const comp = this;\n    const elData = this.data;\n    const diff = AFRAME.utils.diff(elData, oldData);\n\n    const fgProps = [\n      'jsonUrl',\n      'numDimensions',\n      'dagMode',\n      'dagLevelDistance',\n      'dagNodeFilter',\n      'onDagError',\n      'nodeRelSize',\n      'nodeId',\n      'nodeVal',\n      'nodeResolution',\n      'nodeVisibility',\n      'nodeColor',\n      'nodeAutoColorBy',\n      'nodeOpacity',\n      'nodeThreeObject',\n      'nodeThreeObjectExtend',\n      'linkSource',\n      'linkTarget',\n      'linkVisibility',\n      'linkColor',\n      'linkAutoColorBy',\n      'linkOpacity',\n      'linkWidth',\n      'linkResolution',\n      'linkCurvature',\n      'linkCurveRotation',\n      'linkMaterial',\n      'linkThreeObject',\n      'linkThreeObjectExtend',\n      'linkPositionUpdate',\n      'linkDirectionalArrowLength',\n      'linkDirectionalArrowColor',\n      'linkDirectionalArrowRelPos',\n      'linkDirectionalArrowResolution',\n      'linkDirectionalParticles',\n      'linkDirectionalParticleSpeed',\n      'linkDirectionalParticleWidth',\n      'linkDirectionalParticleColor',\n      'linkDirectionalParticleResolution',\n      'forceEngine',\n      'd3AlphaMin',\n      'd3AphaDecay',\n      'd3VelocityDecay',\n      'ngraphPhysics',\n      'warmupTicks',\n      'cooldownTicks',\n      'cooldownTime',\n      'onEngineTick',\n      'onEngineStop'\n    ];\n\n    fgProps\n      .filter(function (p) { return p in diff; })\n      .forEach(function (p) { comp.forceGraph[p](elData[p] !== '' ? elData[p] : null); }); // Convert blank values into nulls\n\n    if ('nodes' in diff || 'links' in diff) {\n      comp.forceGraph.graphData({\n        nodes: elData.nodes,\n        links: elData.links\n      });\n    }\n  },\n\n  tick: function (t, td) {\n    const state = this.state;\n    const props = this.data;\n\n    // Update hover (intersected) object\n    const intersection = state.hoverDetail\n      ? state.hoverDetail.getIntersection\n        ? state.hoverDetail.getIntersection(this.el) // available in raycaster-intersected events\n        : state.hoverDetail.intersection || undefined // available in mouseenter/mouseleave events (with delayed update)\n      : undefined;\n\n    // Note:\n    // Unfortunately we only have access to the intersected object closer to the camera (1st element in the raycaster intersectObjects result),\n    // there is no \".getIntersections()\" method available in the event details. Therefore, we can't prioritize hover on nodes over links, or even exclude\n    // objects that are neither nodes or links. This makes the interaction a bit erratic if nodes have a lot of links in front.\n    // Configuring the raycaster.params.Line.threshold might help with this somewhat, but that config is also not available via the a-frame raycaster component.\n\n    // recurse up until forcegraph obj is found\n    let topObject = intersection ? intersection.object : undefined;\n    while (topObject && !topObject.hasOwnProperty('__graphObjType'))\n      topObject = topObject.parent;\n\n    if (topObject !== state.hoverObj) {\n      const prevObjType = state.hoverObj ? state.hoverObj.__graphObjType : null;\n      const prevObjData = state.hoverObj ? state.hoverObj.__data : null;\n      const objType = topObject ? topObject.__graphObjType : null;\n      const objData = topObject ? topObject.__data : null;\n\n      if (prevObjType && prevObjType !== objType) {\n        // Hover out\n        props['on' + (prevObjType === 'node' ? 'Node' : 'Link') + 'Hover'](null, prevObjData);\n      }\n      if (objType) {\n        // Hover in\n        props['on' + (objType === 'node' ? 'Node' : 'Link') + 'Hover'](objData, prevObjType === objType ? prevObjData : null);\n      }\n\n      state.hoverObj = topObject;\n    }\n\n    // Run force-graph ticker\n    this.forceGraph.tickFrame();\n  }\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}