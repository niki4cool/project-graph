{"ast":null,"code":"import _classCallCheck from \"X:/Project/back/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"X:/Project/back/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"X:/Project/back/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"X:/Project/back/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport { ShaderMaterial, UniformsUtils } from 'three';\nimport { Pass, FullScreenQuad } from './Pass.js';\n\nvar ShaderPass = /*#__PURE__*/function (_Pass) {\n  _inherits(ShaderPass, _Pass);\n\n  var _super = _createSuper(ShaderPass);\n\n  function ShaderPass(shader, textureID) {\n    var _this;\n\n    _classCallCheck(this, ShaderPass);\n\n    _this = _super.call(this);\n    _this.textureID = textureID !== undefined ? textureID : 'tDiffuse';\n\n    if (shader instanceof ShaderMaterial) {\n      _this.uniforms = shader.uniforms;\n      _this.material = shader;\n    } else if (shader) {\n      _this.uniforms = UniformsUtils.clone(shader.uniforms);\n      _this.material = new ShaderMaterial({\n        defines: Object.assign({}, shader.defines),\n        uniforms: _this.uniforms,\n        vertexShader: shader.vertexShader,\n        fragmentShader: shader.fragmentShader\n      });\n    }\n\n    _this.fsQuad = new FullScreenQuad(_this.material);\n    return _this;\n  }\n\n  _createClass(ShaderPass, [{\n    key: \"render\",\n    value: function render(renderer, writeBuffer, readBuffer\n    /*, deltaTime, maskActive */\n    ) {\n      if (this.uniforms[this.textureID]) {\n        this.uniforms[this.textureID].value = readBuffer.texture;\n      }\n\n      this.fsQuad.material = this.material;\n\n      if (this.renderToScreen) {\n        renderer.setRenderTarget(null);\n        this.fsQuad.render(renderer);\n      } else {\n        renderer.setRenderTarget(writeBuffer); // TODO: Avoid using autoClear properties, see https://github.com/mrdoob/three.js/pull/15571#issuecomment-465669600\n\n        if (this.clear) renderer.clear(renderer.autoClearColor, renderer.autoClearDepth, renderer.autoClearStencil);\n        this.fsQuad.render(renderer);\n      }\n    }\n  }]);\n\n  return ShaderPass;\n}(Pass);\n\nexport { ShaderPass };","map":{"version":3,"names":["ShaderMaterial","UniformsUtils","Pass","FullScreenQuad","ShaderPass","shader","textureID","undefined","uniforms","material","clone","defines","Object","assign","vertexShader","fragmentShader","fsQuad","renderer","writeBuffer","readBuffer","value","texture","renderToScreen","setRenderTarget","render","clear","autoClearColor","autoClearDepth","autoClearStencil"],"sources":["X:/Project/back/node_modules/three/examples/jsm/postprocessing/ShaderPass.js"],"sourcesContent":["import {\n\tShaderMaterial,\n\tUniformsUtils\n} from 'three';\nimport { Pass, FullScreenQuad } from './Pass.js';\n\nclass ShaderPass extends Pass {\n\n\tconstructor( shader, textureID ) {\n\n\t\tsuper();\n\n\t\tthis.textureID = ( textureID !== undefined ) ? textureID : 'tDiffuse';\n\n\t\tif ( shader instanceof ShaderMaterial ) {\n\n\t\t\tthis.uniforms = shader.uniforms;\n\n\t\t\tthis.material = shader;\n\n\t\t} else if ( shader ) {\n\n\t\t\tthis.uniforms = UniformsUtils.clone( shader.uniforms );\n\n\t\t\tthis.material = new ShaderMaterial( {\n\n\t\t\t\tdefines: Object.assign( {}, shader.defines ),\n\t\t\t\tuniforms: this.uniforms,\n\t\t\t\tvertexShader: shader.vertexShader,\n\t\t\t\tfragmentShader: shader.fragmentShader\n\n\t\t\t} );\n\n\t\t}\n\n\t\tthis.fsQuad = new FullScreenQuad( this.material );\n\n\t}\n\n\trender( renderer, writeBuffer, readBuffer /*, deltaTime, maskActive */ ) {\n\n\t\tif ( this.uniforms[ this.textureID ] ) {\n\n\t\t\tthis.uniforms[ this.textureID ].value = readBuffer.texture;\n\n\t\t}\n\n\t\tthis.fsQuad.material = this.material;\n\n\t\tif ( this.renderToScreen ) {\n\n\t\t\trenderer.setRenderTarget( null );\n\t\t\tthis.fsQuad.render( renderer );\n\n\t\t} else {\n\n\t\t\trenderer.setRenderTarget( writeBuffer );\n\t\t\t// TODO: Avoid using autoClear properties, see https://github.com/mrdoob/three.js/pull/15571#issuecomment-465669600\n\t\t\tif ( this.clear ) renderer.clear( renderer.autoClearColor, renderer.autoClearDepth, renderer.autoClearStencil );\n\t\t\tthis.fsQuad.render( renderer );\n\n\t\t}\n\n\t}\n\n}\n\nexport { ShaderPass };\n"],"mappings":";;;;AAAA,SACCA,cADD,EAECC,aAFD,QAGO,OAHP;AAIA,SAASC,IAAT,EAAeC,cAAf,QAAqC,WAArC;;IAEMC,U;;;;;EAEL,oBAAaC,MAAb,EAAqBC,SAArB,EAAiC;IAAA;;IAAA;;IAEhC;IAEA,MAAKA,SAAL,GAAmBA,SAAS,KAAKC,SAAhB,GAA8BD,SAA9B,GAA0C,UAA3D;;IAEA,IAAKD,MAAM,YAAYL,cAAvB,EAAwC;MAEvC,MAAKQ,QAAL,GAAgBH,MAAM,CAACG,QAAvB;MAEA,MAAKC,QAAL,GAAgBJ,MAAhB;IAEA,CAND,MAMO,IAAKA,MAAL,EAAc;MAEpB,MAAKG,QAAL,GAAgBP,aAAa,CAACS,KAAd,CAAqBL,MAAM,CAACG,QAA5B,CAAhB;MAEA,MAAKC,QAAL,GAAgB,IAAIT,cAAJ,CAAoB;QAEnCW,OAAO,EAAEC,MAAM,CAACC,MAAP,CAAe,EAAf,EAAmBR,MAAM,CAACM,OAA1B,CAF0B;QAGnCH,QAAQ,EAAE,MAAKA,QAHoB;QAInCM,YAAY,EAAET,MAAM,CAACS,YAJc;QAKnCC,cAAc,EAAEV,MAAM,CAACU;MALY,CAApB,CAAhB;IASA;;IAED,MAAKC,MAAL,GAAc,IAAIb,cAAJ,CAAoB,MAAKM,QAAzB,CAAd;IA3BgC;EA6BhC;;;;WAED,gBAAQQ,QAAR,EAAkBC,WAAlB,EAA+BC;IAAW;IAA1C,EAAyE;MAExE,IAAK,KAAKX,QAAL,CAAe,KAAKF,SAApB,CAAL,EAAuC;QAEtC,KAAKE,QAAL,CAAe,KAAKF,SAApB,EAAgCc,KAAhC,GAAwCD,UAAU,CAACE,OAAnD;MAEA;;MAED,KAAKL,MAAL,CAAYP,QAAZ,GAAuB,KAAKA,QAA5B;;MAEA,IAAK,KAAKa,cAAV,EAA2B;QAE1BL,QAAQ,CAACM,eAAT,CAA0B,IAA1B;QACA,KAAKP,MAAL,CAAYQ,MAAZ,CAAoBP,QAApB;MAEA,CALD,MAKO;QAENA,QAAQ,CAACM,eAAT,CAA0BL,WAA1B,EAFM,CAGN;;QACA,IAAK,KAAKO,KAAV,EAAkBR,QAAQ,CAACQ,KAAT,CAAgBR,QAAQ,CAACS,cAAzB,EAAyCT,QAAQ,CAACU,cAAlD,EAAkEV,QAAQ,CAACW,gBAA3E;QAClB,KAAKZ,MAAL,CAAYQ,MAAZ,CAAoBP,QAApB;MAEA;IAED;;;;EAzDuBf,I;;AA6DzB,SAASE,UAAT"},"metadata":{},"sourceType":"module"}