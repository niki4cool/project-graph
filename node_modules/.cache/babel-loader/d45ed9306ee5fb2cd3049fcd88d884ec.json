{"ast":null,"code":"/**\n * @param  {Array<THREE.Material>|THREE.Material} material\n * @return {Array<THREE.Material>}\n */\nfunction ensureMaterialArray(material) {\n  if (!material) {\n    return [];\n  } else if (Array.isArray(material)) {\n    return material;\n  } else if (material.materials) {\n    return material.materials;\n  } else {\n    return [material];\n  }\n}\n/**\n * @param  {THREE.Object3D} mesh\n * @param  {Array<string>} materialNames\n * @param  {THREE.Texture} envMap\n * @param  {number} reflectivity  [description]\n */\n\n\nfunction applyEnvMap(mesh, materialNames, envMap, reflectivity) {\n  if (!mesh) return;\n  materialNames = materialNames || [];\n  mesh.traverse(function (node) {\n    if (!node.isMesh) return;\n    var meshMaterials = ensureMaterialArray(node.material);\n    meshMaterials.forEach(function (material) {\n      if (material && !('envMap' in material)) return;\n      if (materialNames.length && materialNames.indexOf(material.name) === -1) return;\n      material.envMap = envMap;\n      material.reflectivity = reflectivity;\n      material.needsUpdate = true;\n    });\n  });\n}\n/**\n * Specifies an envMap on an entity, without replacing any existing material\n * properties.\n */\n\n\nmodule.exports = AFRAME.registerComponent('cube-env-map', {\n  multiple: true,\n  schema: {\n    path: {\n      default: ''\n    },\n    extension: {\n      default: 'jpg',\n      oneOf: ['jpg', 'png']\n    },\n    format: {\n      default: 'RGBFormat',\n      oneOf: ['RGBFormat', 'RGBAFormat']\n    },\n    enableBackground: {\n      default: false\n    },\n    reflectivity: {\n      default: 1,\n      min: 0,\n      max: 1\n    },\n    materials: {\n      default: []\n    }\n  },\n  init: function init() {\n    var _this = this;\n\n    var data = this.data;\n    this.texture = new THREE.CubeTextureLoader().load([data.path + 'posx.' + data.extension, data.path + 'negx.' + data.extension, data.path + 'posy.' + data.extension, data.path + 'negy.' + data.extension, data.path + 'posz.' + data.extension, data.path + 'negz.' + data.extension]);\n    this.texture.format = THREE[data.format];\n\n    this.object3dsetHandler = function () {\n      var mesh = _this.el.getObject3D('mesh');\n\n      var data = _this.data;\n      applyEnvMap(mesh, data.materials, _this.texture, data.reflectivity);\n    };\n\n    this.el.addEventListener('object3dset', this.object3dsetHandler);\n  },\n  update: function update(oldData) {\n    var data = this.data;\n    var mesh = this.el.getObject3D('mesh');\n    var addedMaterialNames = [];\n    var removedMaterialNames = [];\n\n    if (data.materials.length) {\n      if (oldData.materials) {\n        addedMaterialNames = data.materials.filter(function (name) {\n          return !oldData.materials.includes(name);\n        });\n        removedMaterialNames = oldData.materials.filter(function (name) {\n          return !data.materials.includes(name);\n        });\n      } else {\n        addedMaterialNames = data.materials;\n      }\n    }\n\n    if (addedMaterialNames.length) {\n      applyEnvMap(mesh, addedMaterialNames, this.texture, data.reflectivity);\n    }\n\n    if (removedMaterialNames.length) {\n      applyEnvMap(mesh, removedMaterialNames, null, 1);\n    }\n\n    if (oldData.materials && data.reflectivity !== oldData.reflectivity) {\n      var maintainedMaterialNames = data.materials.filter(function (name) {\n        return oldData.materials.includes(name);\n      });\n\n      if (maintainedMaterialNames.length) {\n        applyEnvMap(mesh, maintainedMaterialNames, this.texture, data.reflectivity);\n      }\n    }\n\n    if (this.data.enableBackground && !oldData.enableBackground) {\n      this.setBackground(this.texture);\n    } else if (!this.data.enableBackground && oldData.enableBackground) {\n      this.setBackground(null);\n    }\n  },\n  remove: function remove() {\n    this.el.removeEventListener('object3dset', this.object3dsetHandler);\n    var mesh = this.el.getObject3D('mesh');\n    var data = this.data;\n    applyEnvMap(mesh, data.materials, null, 1);\n    if (data.enableBackground) this.setBackground(null);\n  },\n  setBackground: function setBackground(texture) {\n    this.el.sceneEl.object3D.background = texture;\n  }\n});","map":{"version":3,"names":["ensureMaterialArray","material","Array","isArray","materials","applyEnvMap","mesh","materialNames","envMap","reflectivity","traverse","node","isMesh","meshMaterials","forEach","length","indexOf","name","needsUpdate","module","exports","AFRAME","registerComponent","multiple","schema","path","default","extension","oneOf","format","enableBackground","min","max","init","data","texture","THREE","CubeTextureLoader","load","object3dsetHandler","el","getObject3D","addEventListener","update","oldData","addedMaterialNames","removedMaterialNames","filter","includes","maintainedMaterialNames","setBackground","remove","removeEventListener","sceneEl","object3D","background"],"sources":["X:/Project/back/node_modules/aframe-extras/src/misc/cube-env-map.js"],"sourcesContent":["/**\n * @param  {Array<THREE.Material>|THREE.Material} material\n * @return {Array<THREE.Material>}\n */\nfunction ensureMaterialArray (material) {\n  if (!material) {\n    return [];\n  } else if (Array.isArray(material)) {\n    return material;\n  } else if (material.materials) {\n    return material.materials;\n  } else {\n    return [material];\n  }\n}\n\n/**\n * @param  {THREE.Object3D} mesh\n * @param  {Array<string>} materialNames\n * @param  {THREE.Texture} envMap\n * @param  {number} reflectivity  [description]\n */\nfunction applyEnvMap (mesh, materialNames, envMap, reflectivity) {\n  if (!mesh) return;\n\n  materialNames = materialNames || [];\n\n  mesh.traverse((node) => {\n\n    if (!node.isMesh) return;\n\n    const meshMaterials = ensureMaterialArray(node.material);\n\n    meshMaterials.forEach((material) => {\n\n      if (material && !('envMap' in material)) return;\n      if (materialNames.length && materialNames.indexOf(material.name) === -1) return;\n\n      material.envMap = envMap;\n      material.reflectivity = reflectivity;\n      material.needsUpdate = true;\n\n    });\n\n  });\n}\n\n/**\n * Specifies an envMap on an entity, without replacing any existing material\n * properties.\n */\nmodule.exports = AFRAME.registerComponent('cube-env-map', {\n  multiple: true,\n\n  schema: {\n    path: {default: ''},\n    extension: {default: 'jpg', oneOf: ['jpg', 'png']},\n    format: {default: 'RGBFormat', oneOf: ['RGBFormat', 'RGBAFormat']},\n    enableBackground: {default: false},\n    reflectivity: {default: 1, min: 0, max: 1},\n    materials: {default: []}\n  },\n\n  init: function () {\n    const data = this.data;\n\n    this.texture = new THREE.CubeTextureLoader().load([\n      data.path + 'posx.' + data.extension, data.path + 'negx.' + data.extension,\n      data.path + 'posy.' + data.extension, data.path + 'negy.' + data.extension,\n      data.path + 'posz.' + data.extension, data.path + 'negz.' + data.extension\n    ]);\n    this.texture.format = THREE[data.format];\n\n    this.object3dsetHandler = () => {\n      const mesh = this.el.getObject3D('mesh');\n      const data = this.data;\n      applyEnvMap(mesh, data.materials, this.texture, data.reflectivity);\n    };\n    this.el.addEventListener('object3dset', this.object3dsetHandler);\n  },\n\n  update: function (oldData) {\n    const data = this.data;\n    const mesh = this.el.getObject3D('mesh');\n\n    let addedMaterialNames = [];\n    let removedMaterialNames = [];\n\n    if (data.materials.length) {\n      if (oldData.materials) {\n        addedMaterialNames = data.materials.filter((name) => !oldData.materials.includes(name));\n        removedMaterialNames = oldData.materials.filter((name) => !data.materials.includes(name));\n      } else {\n        addedMaterialNames = data.materials;\n      }\n    }\n    if (addedMaterialNames.length) {\n      applyEnvMap(mesh, addedMaterialNames, this.texture, data.reflectivity);\n    }\n    if (removedMaterialNames.length) {\n      applyEnvMap(mesh, removedMaterialNames, null, 1);\n    }\n\n    if (oldData.materials && data.reflectivity !== oldData.reflectivity) {\n      const maintainedMaterialNames = data.materials\n        .filter((name) => oldData.materials.includes(name));\n      if (maintainedMaterialNames.length) {\n        applyEnvMap(mesh, maintainedMaterialNames, this.texture, data.reflectivity);\n      }\n    }\n\n    if (this.data.enableBackground && !oldData.enableBackground) {\n      this.setBackground(this.texture);\n    } else if (!this.data.enableBackground && oldData.enableBackground) {\n      this.setBackground(null);\n    }\n  },\n\n  remove: function () {\n    this.el.removeEventListener('object3dset', this.object3dsetHandler);\n    const mesh = this.el.getObject3D('mesh');\n    const data = this.data;\n\n    applyEnvMap(mesh, data.materials, null, 1);\n    if (data.enableBackground) this.setBackground(null);\n  },\n\n  setBackground: function (texture) {\n    this.el.sceneEl.object3D.background = texture;\n  }\n});\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA,SAASA,mBAAT,CAA8BC,QAA9B,EAAwC;EACtC,IAAI,CAACA,QAAL,EAAe;IACb,OAAO,EAAP;EACD,CAFD,MAEO,IAAIC,KAAK,CAACC,OAAN,CAAcF,QAAd,CAAJ,EAA6B;IAClC,OAAOA,QAAP;EACD,CAFM,MAEA,IAAIA,QAAQ,CAACG,SAAb,EAAwB;IAC7B,OAAOH,QAAQ,CAACG,SAAhB;EACD,CAFM,MAEA;IACL,OAAO,CAACH,QAAD,CAAP;EACD;AACF;AAED;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASI,WAAT,CAAsBC,IAAtB,EAA4BC,aAA5B,EAA2CC,MAA3C,EAAmDC,YAAnD,EAAiE;EAC/D,IAAI,CAACH,IAAL,EAAW;EAEXC,aAAa,GAAGA,aAAa,IAAI,EAAjC;EAEAD,IAAI,CAACI,QAAL,CAAc,UAACC,IAAD,EAAU;IAEtB,IAAI,CAACA,IAAI,CAACC,MAAV,EAAkB;IAElB,IAAMC,aAAa,GAAGb,mBAAmB,CAACW,IAAI,CAACV,QAAN,CAAzC;IAEAY,aAAa,CAACC,OAAd,CAAsB,UAACb,QAAD,EAAc;MAElC,IAAIA,QAAQ,IAAI,EAAE,YAAYA,QAAd,CAAhB,EAAyC;MACzC,IAAIM,aAAa,CAACQ,MAAd,IAAwBR,aAAa,CAACS,OAAd,CAAsBf,QAAQ,CAACgB,IAA/B,MAAyC,CAAC,CAAtE,EAAyE;MAEzEhB,QAAQ,CAACO,MAAT,GAAkBA,MAAlB;MACAP,QAAQ,CAACQ,YAAT,GAAwBA,YAAxB;MACAR,QAAQ,CAACiB,WAAT,GAAuB,IAAvB;IAED,CATD;EAWD,CAjBD;AAkBD;AAED;AACA;AACA;AACA;;;AACAC,MAAM,CAACC,OAAP,GAAiBC,MAAM,CAACC,iBAAP,CAAyB,cAAzB,EAAyC;EACxDC,QAAQ,EAAE,IAD8C;EAGxDC,MAAM,EAAE;IACNC,IAAI,EAAE;MAACC,OAAO,EAAE;IAAV,CADA;IAENC,SAAS,EAAE;MAACD,OAAO,EAAE,KAAV;MAAiBE,KAAK,EAAE,CAAC,KAAD,EAAQ,KAAR;IAAxB,CAFL;IAGNC,MAAM,EAAE;MAACH,OAAO,EAAE,WAAV;MAAuBE,KAAK,EAAE,CAAC,WAAD,EAAc,YAAd;IAA9B,CAHF;IAINE,gBAAgB,EAAE;MAACJ,OAAO,EAAE;IAAV,CAJZ;IAKNjB,YAAY,EAAE;MAACiB,OAAO,EAAE,CAAV;MAAaK,GAAG,EAAE,CAAlB;MAAqBC,GAAG,EAAE;IAA1B,CALR;IAMN5B,SAAS,EAAE;MAACsB,OAAO,EAAE;IAAV;EANL,CAHgD;EAYxDO,IAAI,EAAE,gBAAY;IAAA;;IAChB,IAAMC,IAAI,GAAG,KAAKA,IAAlB;IAEA,KAAKC,OAAL,GAAe,IAAIC,KAAK,CAACC,iBAAV,GAA8BC,IAA9B,CAAmC,CAChDJ,IAAI,CAACT,IAAL,GAAY,OAAZ,GAAsBS,IAAI,CAACP,SADqB,EACVO,IAAI,CAACT,IAAL,GAAY,OAAZ,GAAsBS,IAAI,CAACP,SADjB,EAEhDO,IAAI,CAACT,IAAL,GAAY,OAAZ,GAAsBS,IAAI,CAACP,SAFqB,EAEVO,IAAI,CAACT,IAAL,GAAY,OAAZ,GAAsBS,IAAI,CAACP,SAFjB,EAGhDO,IAAI,CAACT,IAAL,GAAY,OAAZ,GAAsBS,IAAI,CAACP,SAHqB,EAGVO,IAAI,CAACT,IAAL,GAAY,OAAZ,GAAsBS,IAAI,CAACP,SAHjB,CAAnC,CAAf;IAKA,KAAKQ,OAAL,CAAaN,MAAb,GAAsBO,KAAK,CAACF,IAAI,CAACL,MAAN,CAA3B;;IAEA,KAAKU,kBAAL,GAA0B,YAAM;MAC9B,IAAMjC,IAAI,GAAG,KAAI,CAACkC,EAAL,CAAQC,WAAR,CAAoB,MAApB,CAAb;;MACA,IAAMP,IAAI,GAAG,KAAI,CAACA,IAAlB;MACA7B,WAAW,CAACC,IAAD,EAAO4B,IAAI,CAAC9B,SAAZ,EAAuB,KAAI,CAAC+B,OAA5B,EAAqCD,IAAI,CAACzB,YAA1C,CAAX;IACD,CAJD;;IAKA,KAAK+B,EAAL,CAAQE,gBAAR,CAAyB,aAAzB,EAAwC,KAAKH,kBAA7C;EACD,CA5BuD;EA8BxDI,MAAM,EAAE,gBAAUC,OAAV,EAAmB;IACzB,IAAMV,IAAI,GAAG,KAAKA,IAAlB;IACA,IAAM5B,IAAI,GAAG,KAAKkC,EAAL,CAAQC,WAAR,CAAoB,MAApB,CAAb;IAEA,IAAII,kBAAkB,GAAG,EAAzB;IACA,IAAIC,oBAAoB,GAAG,EAA3B;;IAEA,IAAIZ,IAAI,CAAC9B,SAAL,CAAeW,MAAnB,EAA2B;MACzB,IAAI6B,OAAO,CAACxC,SAAZ,EAAuB;QACrByC,kBAAkB,GAAGX,IAAI,CAAC9B,SAAL,CAAe2C,MAAf,CAAsB,UAAC9B,IAAD;UAAA,OAAU,CAAC2B,OAAO,CAACxC,SAAR,CAAkB4C,QAAlB,CAA2B/B,IAA3B,CAAX;QAAA,CAAtB,CAArB;QACA6B,oBAAoB,GAAGF,OAAO,CAACxC,SAAR,CAAkB2C,MAAlB,CAAyB,UAAC9B,IAAD;UAAA,OAAU,CAACiB,IAAI,CAAC9B,SAAL,CAAe4C,QAAf,CAAwB/B,IAAxB,CAAX;QAAA,CAAzB,CAAvB;MACD,CAHD,MAGO;QACL4B,kBAAkB,GAAGX,IAAI,CAAC9B,SAA1B;MACD;IACF;;IACD,IAAIyC,kBAAkB,CAAC9B,MAAvB,EAA+B;MAC7BV,WAAW,CAACC,IAAD,EAAOuC,kBAAP,EAA2B,KAAKV,OAAhC,EAAyCD,IAAI,CAACzB,YAA9C,CAAX;IACD;;IACD,IAAIqC,oBAAoB,CAAC/B,MAAzB,EAAiC;MAC/BV,WAAW,CAACC,IAAD,EAAOwC,oBAAP,EAA6B,IAA7B,EAAmC,CAAnC,CAAX;IACD;;IAED,IAAIF,OAAO,CAACxC,SAAR,IAAqB8B,IAAI,CAACzB,YAAL,KAAsBmC,OAAO,CAACnC,YAAvD,EAAqE;MACnE,IAAMwC,uBAAuB,GAAGf,IAAI,CAAC9B,SAAL,CAC7B2C,MAD6B,CACtB,UAAC9B,IAAD;QAAA,OAAU2B,OAAO,CAACxC,SAAR,CAAkB4C,QAAlB,CAA2B/B,IAA3B,CAAV;MAAA,CADsB,CAAhC;;MAEA,IAAIgC,uBAAuB,CAAClC,MAA5B,EAAoC;QAClCV,WAAW,CAACC,IAAD,EAAO2C,uBAAP,EAAgC,KAAKd,OAArC,EAA8CD,IAAI,CAACzB,YAAnD,CAAX;MACD;IACF;;IAED,IAAI,KAAKyB,IAAL,CAAUJ,gBAAV,IAA8B,CAACc,OAAO,CAACd,gBAA3C,EAA6D;MAC3D,KAAKoB,aAAL,CAAmB,KAAKf,OAAxB;IACD,CAFD,MAEO,IAAI,CAAC,KAAKD,IAAL,CAAUJ,gBAAX,IAA+Bc,OAAO,CAACd,gBAA3C,EAA6D;MAClE,KAAKoB,aAAL,CAAmB,IAAnB;IACD;EACF,CAjEuD;EAmExDC,MAAM,EAAE,kBAAY;IAClB,KAAKX,EAAL,CAAQY,mBAAR,CAA4B,aAA5B,EAA2C,KAAKb,kBAAhD;IACA,IAAMjC,IAAI,GAAG,KAAKkC,EAAL,CAAQC,WAAR,CAAoB,MAApB,CAAb;IACA,IAAMP,IAAI,GAAG,KAAKA,IAAlB;IAEA7B,WAAW,CAACC,IAAD,EAAO4B,IAAI,CAAC9B,SAAZ,EAAuB,IAAvB,EAA6B,CAA7B,CAAX;IACA,IAAI8B,IAAI,CAACJ,gBAAT,EAA2B,KAAKoB,aAAL,CAAmB,IAAnB;EAC5B,CA1EuD;EA4ExDA,aAAa,EAAE,uBAAUf,OAAV,EAAmB;IAChC,KAAKK,EAAL,CAAQa,OAAR,CAAgBC,QAAhB,CAAyBC,UAAzB,GAAsCpB,OAAtC;EACD;AA9EuD,CAAzC,CAAjB"},"metadata":{},"sourceType":"script"}