{"ast":null,"code":"/**\n * Tube following a custom path.\n *\n * Usage:\n *\n * ```html\n * <a-tube path=\"5 0 5, 5 0 -5, -5 0 -5\" radius=\"0.5\"></a-tube>\n * ```\n */\nmodule.exports.Primitive = AFRAME.registerPrimitive('a-tube', {\n  defaultComponents: {\n    tube: {}\n  },\n  mappings: {\n    path: 'tube.path',\n    segments: 'tube.segments',\n    radius: 'tube.radius',\n    'radial-segments': 'tube.radialSegments',\n    closed: 'tube.closed'\n  }\n});\nmodule.exports.Component = AFRAME.registerComponent('tube', {\n  schema: {\n    path: {\n      default: []\n    },\n    segments: {\n      default: 64\n    },\n    radius: {\n      default: 1\n    },\n    radialSegments: {\n      default: 8\n    },\n    closed: {\n      default: false\n    }\n  },\n  init: function init() {\n    var el = this.el,\n        data = this.data;\n    var material = el.components.material;\n\n    if (!data.path.length) {\n      console.error('[a-tube] `path` property expected but not found.');\n      return;\n    }\n\n    var curve = new THREE.CatmullRomCurve3(data.path.map(function (point) {\n      point = point.split(' ');\n      return new THREE.Vector3(Number(point[0]), Number(point[1]), Number(point[2]));\n    }));\n    var geometry = new THREE.TubeGeometry(curve, data.segments, data.radius, data.radialSegments, data.closed);\n\n    if (!material) {\n      material = {};\n      material.material = new THREE.MeshPhongMaterial();\n    }\n\n    this.mesh = new THREE.Mesh(geometry, material.material);\n    this.el.setObject3D('mesh', this.mesh);\n  },\n  update: function update(prevData) {\n    if (!Object.keys(prevData).length) return;\n    this.remove();\n    this.init();\n  },\n  remove: function remove() {\n    if (this.mesh) this.el.removeObject3D('mesh');\n  }\n});","map":{"version":3,"names":["module","exports","Primitive","AFRAME","registerPrimitive","defaultComponents","tube","mappings","path","segments","radius","closed","Component","registerComponent","schema","default","radialSegments","init","el","data","material","components","length","console","error","curve","THREE","CatmullRomCurve3","map","point","split","Vector3","Number","geometry","TubeGeometry","MeshPhongMaterial","mesh","Mesh","setObject3D","update","prevData","Object","keys","remove","removeObject3D"],"sources":["X:/Project/back/node_modules/aframe-extras/src/primitives/a-tube.js"],"sourcesContent":["/**\n * Tube following a custom path.\n *\n * Usage:\n *\n * ```html\n * <a-tube path=\"5 0 5, 5 0 -5, -5 0 -5\" radius=\"0.5\"></a-tube>\n * ```\n */\nmodule.exports.Primitive = AFRAME.registerPrimitive('a-tube', {\n  defaultComponents: {\n    tube:           {},\n  },\n  mappings: {\n    path:           'tube.path',\n    segments:       'tube.segments',\n    radius:         'tube.radius',\n    'radial-segments': 'tube.radialSegments',\n    closed:         'tube.closed'\n  }\n});\n\nmodule.exports.Component = AFRAME.registerComponent('tube', {\n  schema: {\n    path:           {default: []},\n    segments:       {default: 64},\n    radius:         {default: 1},\n    radialSegments: {default: 8},\n    closed:         {default: false}\n  },\n\n  init: function () {\n    const el = this.el,\n        data = this.data;\n    let material = el.components.material;\n\n    if (!data.path.length) {\n      console.error('[a-tube] `path` property expected but not found.');\n      return;\n    }\n\n    const curve = new THREE.CatmullRomCurve3(data.path.map(function (point) {\n      point = point.split(' ');\n      return new THREE.Vector3(Number(point[0]), Number(point[1]), Number(point[2]));\n    }));\n    const geometry = new THREE.TubeGeometry(\n      curve, data.segments, data.radius, data.radialSegments, data.closed\n    );\n\n    if (!material) {\n      material = {};\n      material.material = new THREE.MeshPhongMaterial();\n    }\n\n    this.mesh = new THREE.Mesh(geometry, material.material);\n    this.el.setObject3D('mesh', this.mesh);\n  },\n\n  update: function (prevData) {\n    if (!Object.keys(prevData).length) return;\n\n    this.remove();\n    this.init();\n  },\n\n  remove: function () {\n    if (this.mesh) this.el.removeObject3D('mesh');\n  }\n});\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAA,MAAM,CAACC,OAAP,CAAeC,SAAf,GAA2BC,MAAM,CAACC,iBAAP,CAAyB,QAAzB,EAAmC;EAC5DC,iBAAiB,EAAE;IACjBC,IAAI,EAAY;EADC,CADyC;EAI5DC,QAAQ,EAAE;IACRC,IAAI,EAAY,WADR;IAERC,QAAQ,EAAQ,eAFR;IAGRC,MAAM,EAAU,aAHR;IAIR,mBAAmB,qBAJX;IAKRC,MAAM,EAAU;EALR;AAJkD,CAAnC,CAA3B;AAaAX,MAAM,CAACC,OAAP,CAAeW,SAAf,GAA2BT,MAAM,CAACU,iBAAP,CAAyB,MAAzB,EAAiC;EAC1DC,MAAM,EAAE;IACNN,IAAI,EAAY;MAACO,OAAO,EAAE;IAAV,CADV;IAENN,QAAQ,EAAQ;MAACM,OAAO,EAAE;IAAV,CAFV;IAGNL,MAAM,EAAU;MAACK,OAAO,EAAE;IAAV,CAHV;IAINC,cAAc,EAAE;MAACD,OAAO,EAAE;IAAV,CAJV;IAKNJ,MAAM,EAAU;MAACI,OAAO,EAAE;IAAV;EALV,CADkD;EAS1DE,IAAI,EAAE,gBAAY;IAChB,IAAMC,EAAE,GAAG,KAAKA,EAAhB;IAAA,IACIC,IAAI,GAAG,KAAKA,IADhB;IAEA,IAAIC,QAAQ,GAAGF,EAAE,CAACG,UAAH,CAAcD,QAA7B;;IAEA,IAAI,CAACD,IAAI,CAACX,IAAL,CAAUc,MAAf,EAAuB;MACrBC,OAAO,CAACC,KAAR,CAAc,kDAAd;MACA;IACD;;IAED,IAAMC,KAAK,GAAG,IAAIC,KAAK,CAACC,gBAAV,CAA2BR,IAAI,CAACX,IAAL,CAAUoB,GAAV,CAAc,UAAUC,KAAV,EAAiB;MACtEA,KAAK,GAAGA,KAAK,CAACC,KAAN,CAAY,GAAZ,CAAR;MACA,OAAO,IAAIJ,KAAK,CAACK,OAAV,CAAkBC,MAAM,CAACH,KAAK,CAAC,CAAD,CAAN,CAAxB,EAAoCG,MAAM,CAACH,KAAK,CAAC,CAAD,CAAN,CAA1C,EAAsDG,MAAM,CAACH,KAAK,CAAC,CAAD,CAAN,CAA5D,CAAP;IACD,CAHwC,CAA3B,CAAd;IAIA,IAAMI,QAAQ,GAAG,IAAIP,KAAK,CAACQ,YAAV,CACfT,KADe,EACRN,IAAI,CAACV,QADG,EACOU,IAAI,CAACT,MADZ,EACoBS,IAAI,CAACH,cADzB,EACyCG,IAAI,CAACR,MAD9C,CAAjB;;IAIA,IAAI,CAACS,QAAL,EAAe;MACbA,QAAQ,GAAG,EAAX;MACAA,QAAQ,CAACA,QAAT,GAAoB,IAAIM,KAAK,CAACS,iBAAV,EAApB;IACD;;IAED,KAAKC,IAAL,GAAY,IAAIV,KAAK,CAACW,IAAV,CAAeJ,QAAf,EAAyBb,QAAQ,CAACA,QAAlC,CAAZ;IACA,KAAKF,EAAL,CAAQoB,WAAR,CAAoB,MAApB,EAA4B,KAAKF,IAAjC;EACD,CAlCyD;EAoC1DG,MAAM,EAAE,gBAAUC,QAAV,EAAoB;IAC1B,IAAI,CAACC,MAAM,CAACC,IAAP,CAAYF,QAAZ,EAAsBlB,MAA3B,EAAmC;IAEnC,KAAKqB,MAAL;IACA,KAAK1B,IAAL;EACD,CAzCyD;EA2C1D0B,MAAM,EAAE,kBAAY;IAClB,IAAI,KAAKP,IAAT,EAAe,KAAKlB,EAAL,CAAQ0B,cAAR,CAAuB,MAAvB;EAChB;AA7CyD,CAAjC,CAA3B"},"metadata":{},"sourceType":"script"}